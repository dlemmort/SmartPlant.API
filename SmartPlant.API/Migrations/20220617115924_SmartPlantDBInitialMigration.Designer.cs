// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartPlant.API.DbContext;

#nullable disable

namespace SmartPlant.API.Migrations
{
    [DbContext(typeof(PlantContext))]
    [Migration("20220617115924_SmartPlantDBInitialMigration")]
    partial class SmartPlantDBInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartPlant.API.Entities.Moisture", b =>
                {
                    b.Property<int>("MoistureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.HasKey("MoistureId");

                    b.HasIndex("PlantId");

                    b.ToTable("Moistures");
                });

            modelBuilder.Entity("SmartPlant.API.Entities.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MaxMoistureLevel")
                        .HasColumnType("int");

                    b.Property<int>("MaxWaterLevel")
                        .HasColumnType("int");

                    b.Property<int>("MinMoistureLevel")
                        .HasColumnType("int");

                    b.Property<int>("MinWaterLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("SmartPlant.API.Entities.WaterLevel", b =>
                {
                    b.Property<int>("WaterLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.HasKey("WaterLevelId");

                    b.HasIndex("PlantId");

                    b.ToTable("WaterLevels");
                });

            modelBuilder.Entity("SmartPlant.API.Entities.Moisture", b =>
                {
                    b.HasOne("SmartPlant.API.Entities.Plant", "Plant")
                        .WithMany("MoistureLevels")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("SmartPlant.API.Entities.WaterLevel", b =>
                {
                    b.HasOne("SmartPlant.API.Entities.Plant", "Plant")
                        .WithMany("WaterLevels")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("SmartPlant.API.Entities.Plant", b =>
                {
                    b.Navigation("MoistureLevels");

                    b.Navigation("WaterLevels");
                });
#pragma warning restore 612, 618
        }
    }
}
